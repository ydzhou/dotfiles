call plug#begin()
" Bundles
Plug 'ctrlpvim/ctrlp.vim'
Plug 'ryanoasis/vim-devicons'
" Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
" Plug 'junegunn/fzf.vim'
Plug 'tomtom/tcomment_vim'
Plug 'jiangmiao/auto-pairs'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/asyncomplete-buffer.vim'
Plug 'lambdalisue/fern.vim'
Plug 'lambdalisue/fern-hijack.vim'
Plug 'lambdalisue/fern-renderer-nerdfont.vim'
Plug 'lambdalisue/nerdfont.vim'
Plug 'mhinz/vim-startify'
" Colorscheme
Plug 'ydzhou/monocolor.vim'
Plug 'morhetz/gruvbox'
Plug 'arcticicestudio/nord-vim'
Plug 'rakr/vim-one'
Plug 'NLKNguyen/papercolor-theme'
Plug 'cocopon/iceberg.vim'
call plug#end()

set nocompatible
set mouse=a
set backspace=indent,eol,start
set gcr=a:blinkon0
set autoread
set noeb vb t_vb=
if has('autocmd')
	autocmd GUIEnter * set visualbell t_vb=
endif
set encoding=UTF-8
" Show completion candidates for vim commands
set wildmenu
set nofoldenable

filetype on
filetype plugin on
filetype indent on

set wrap lbr
set display=lastline
set tabstop=4 shiftwidth=4 softtabstop=4 expandtab shiftround
set showmatch matchtime=1 matchpairs&
set cindent autoindent
set clipboard+=unnamed
set signcolumn=number

" set ruler
source ~/dotfiles/vim/configs/statusline.vim
set laststatus=2
set statusline=%!SimStatusline()

syntax on
if has("gui_running")
	set number
	" set guifont=AnonymousProMinus:h16
    " set guifont=Menlo-Regular:h16
    " set guifont=IosevkaNerdFontComplete-:h15
    set guifont=LiterationMonoNerdFontComplete-:h17
    " set guifont=MesloLGMNerdFontComplete-Regular:h15
    set linespace=4
    set guioptions-=m
	set guioptions-=r
	set guioptions-=T
	set guioptions-=e
	set guioptions-=L
	set lines=40
	set columns=120
	set background=dark
	colorscheme iceberg
    autocmd InsertEnter,InsertLeave * set cul!
else
	set guioptions-=e
	set t_Co=256
	set number
	" set background=dark
	colorscheme monocolor
endif

set incsearch ignorecase smartcase

""Backup
set noswapfile
set backupdir=~/.vim/backup

let mapleader=","
map ; <C-d>
map ' <C-u>
map <silent> <Leader>, <C-o>
map <silent> <Leader>. <C-i>
" standard keys for wrapped lines
set whichwrap+=<,>,[,]
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
"" easier moving of code block
vnoremap < <gv
vnoremap > >gv
" Paste from 0 register to avoid cannot paste after deletion
nnoremap d "_d
xnoremap d "_d
nnoremap x "_x
xnoremap x "_x
nnoremap s "_s
xnoremap s "_s

autocmd BufNewFile,BufReadPost *.md set filetype=markdown

""""""""""""""""""""""""""
"" PLUGINS

source ~/dotfiles/vim/configs/lspcomp.vim
source ~/dotfiles/vim/configs/fern.vim
source ~/dotfiles/vim/configs/ctrlp.vim
" source ~/dotfiles/vim/configs/vimdirvish.vim
" source ~/dotfiles/vim/configs/fzf.vim
source ~/dotfiles/vim/configs/startify.vim
source ~/dotfiles/vim/configs/startify_quotes.vim

" TComment
"let g:tcommentOptions = {'whitespace' : 'no'}
map <silent> <Leader>c :TComment<CR>
